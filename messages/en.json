{
  "hero": {
    "badge": "Full Stack Developer",
    "greeting": "Hi there! I'm",
    "name": "Gimhan Rodrigo",
    "description": "Building seamless digital experiences with clean code and cutting-edge technology. Passionate about crafting high-performance, scalable solutions."
  },
  "buttons": {
    "viewWork": "View My Work",
    "getInTouch": "Get In Touch"
  },
  "about": {
    "title": "About Me",
    "description": "I'm a results-driven full-stack developer with expertise in web, mobile, and machine learning. With a strong foundation in software engineering and a passion for problem-solving, I thrive on building innovative, efficient, and scalable applications."
  },
  "tabs": {
    "skills": "Skills",
    "experience": "Experience",
    "education": "Education"
  },
  "projects": {
    "title": "Featured Projects",
    "description": "Check out some of my recent work.",
    "showMore": "Show More",
    "showLess": "Show Less",
    "items": {
      "portfolio": {
        "title": "Portfolio Website",
        "description": "A website showcasing my projects, skills, and experiences. Built with Next.js, TypeScript, and Tailwind CSS. Includes CI/CD pipeline with Github Actions for automated testing and deployment. Integrates with SonarQube for code quality analysis.",
        "tags": ["Next.js", "Typescript", "Jest", "Tailwind CSS", "SonarQube", "GitHub Actions", "CI/CD", "Vercel"]
      },
      "loyalty": {
        "title": "Loyalty App",
        "description": "A full-stack loyalty application with React, Golang, and SQLite. Integrated with Square API for loyalty point and customer processing.",
        "tags": ["React", "Golang", "SQLite", "Square API"]
      },
      "doorbell": {
        "title": "Contactless Doorbell With Masked Face Recognition",
        "description": "A system consisting of a mobile application, Flask REST API and a Raspberry Pi device acting as the doorbell specializing in masked face recognition.",
        "tags": ["Flask", "Tensorflow", "Keras", "Flutter", "Firebase", "OneSignal", "SendGrid", "JWT", "GCP", "Masked face recognition", "Image processing"]
      },
      "shopping-api": {
        "title": "Shopping API",
        "description": "An API built with MongoDB, Express, and Node.js for managing shopping lists and product inventories. Features include user authentication and real-time updates.",
        "tags": ["Node.js", "Express", "MongoDB", "SendGrid", "JWT"]
      },
      "flutter-shopping": {
        "title": "Flutter Shopping Application",
        "description": "A flutter ecommerce mobile application that includes various features including Firebase auth and forgot password, cart, purchase rating and review, view and ask product related questions from seller, read product ratings and reviews, product variants and stock management.",
        "tags": ["Flutter", "Dart", "Firebase"]
      },
      "android-shopping": {
        "title": "Android Shopping Application",
        "description": "An Android ecommerce mobile application developed using the MVVM architecture equipped with an admin login where products can be added while also replying to customer queries. This is a complete ecommerce application equipped with Firebase authentication.",
        "tags": ["Android", "Java", "Firebase", "MVVM", "Navigation component"]
      },
      "student-enquiry": {
        "title": "Student Enquiry Management System",
        "description": "A student enquiry management system built using C++ and data structures to enable an university to maintain and update each enquiry from the time it is entered until it is resolved.",
        "tags": ["C++", "Data structures"]
      }
    }
  },
  "notFound": {
    "title": "Page Not Found",
    "description": "The page you're looking for doesn't exist or has been moved.",
    "goBack": "Go Back",
    "backToHome": "Back to Home",
    "suggestedLinks": "You might be looking for:",
    "projects": "Projects",
    "about": "About",
    "contact": "Contact"
  },
  "status": {
    "cicd": {
      "label": "CI/CD",
      "passing": "Passing",
      "failing": "Failing",
      "pending": "Pending",
      "notAvailable": "Not Available"
    },
    "qualityGate": {
      "label": "Quality Gate",
      "passed": "Passed",
      "failed": "Failed",
      "pending": "Pending",
      "notAvailable": "Not Available"
    },
    "testCoverage": {
      "label": "Tests",
      "notAvailable": "Not Available"
    }
  },
  "skills": {
    "techStack": "Current Technologies",
    "frontend": "Frontend Development",
    "backend": "Backend Development",
    "devops": "DevOps & Testing",
    "mobile": "Mobile Development",
    "design": "UI/UX Design"
  },
  "contact": {
    "title": "Get In Touch",
    "description": "Interested in working together? Feel free to reach out.",
    "form": {
      "labels": {
        "name": "Name",
        "email": "Email",
        "message": "Message"
      },
      "placeholders": {
        "name": "Your name",
        "email": "your.email@example.com",
        "message": "Your message"
      },
      "buttons": {
        "send": "Send Message",
        "sending": "Sending...",
        "sent": "Sent!"
      },
      "errors": {
        "title": "Something went wrong",
        "nameRequired": "Name is required",
        "emailRequired": "Email is required",
        "emailInvalid": "Please enter a valid email address",
        "messageRequired": "Message is required",
        "messageTooShort": "Message must be at least 10 characters",
        "sendFailed": "Your message couldn't be sent. Please try again.",
        "missingFields": "Name, email, and message are required",
        "emailServiceNotConfigured": "Email service is not configured. Please contact the administrator.",
        "emailServiceError": "Email service error. Please try again later."
      },
      "success": {
        "title": "Message sent!",
        "description": "Thanks for reaching out. I'll get back to you soon.",
        "message": "Your message has been sent successfully"
      }
    }
  }
}
